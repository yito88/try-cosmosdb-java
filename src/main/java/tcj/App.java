/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tcj;

import com.microsoft.azure.documentdb.ConnectionPolicy;
import com.microsoft.azure.documentdb.ConsistencyLevel;
import com.microsoft.azure.documentdb.Document;
import com.microsoft.azure.documentdb.DocumentClient;
import com.microsoft.azure.documentdb.DocumentClientException;
import com.microsoft.azure.documentdb.FeedResponse;
import com.microsoft.azure.documentdb.PartitionKey;
import com.microsoft.azure.documentdb.RequestOptions;

public class App {
  private static String host;
  private static String masterKey;
  private static DocumentClient client;

  public static void main(String[] args) {
    for (int i = 0; i < args.length; ++i) {
      if ("-h".equals(args[i])) {
        host = args[++i];
      } else if ("-k".equals(args[i])) {
        masterKey = args[++i];
      }
    }
    System.out.println("Connecting to Cosmos DB...");
    client = getClient();

    Record rec = new Record("0", "0");
    rec.withValue("v1", 100);
    rec.withValue("v2", 200);

    insert(rec);

    // rec = new Record("1", "0");
    // rec.withValue("v1", 101);
    // rec.withValue("v2", 202);

    // insert(rec);

    // rec = new Record("2", "0");
    // rec.withValue("v1", 110);
    // rec.withValue("v2", 220);

    // insert(rec);

    System.out.println("Query a record from Cosmos DB...");
    FeedResponse<Document> queryResults =
        client.queryDocuments(
            "/dbs/SampleDB/colls/SampleContainer",
            "SELECT r.key1, r.key2, r.values FROM Record r WHERE r.key1 = '0'",
            null);

    System.out.println("Running SQL query...");
    for (Document doc : queryResults.getQueryIterable()) {
      System.out.println(String.format("\tRead %s", doc));
    }

    rec = new Record("0", "0");
    rec.withValue("v1", 111);
    rec.withValue("v2", 222);
    insertIfNotExists(rec);

    rec = new Record("1", "0");
    rec.withValue("v1", 111);
    rec.withValue("v2", 222);
    insertIfNotExists(rec);

    client.close();
  }

  private static DocumentClient getClient() {
    return new DocumentClient(
        host, masterKey, ConnectionPolicy.GetDefault(), ConsistencyLevel.Strong);
  }

  private static void insert(Record rec) {
    System.out.println("Inserting a record to Cosmos DB...");
    try {
      client.createDocument("/dbs/SampleDB/colls/SampleContainer", rec, new RequestOptions(), true);
    } catch (DocumentClientException e) {
      System.err.println("Insertion failed");
      // throw new RuntimeException("Insertion failed", e);
    }
  }

  private static void insertIfNotExists(Record rec) {
    String sprocLink = "/dbs/SampleDB/colls/SampleContainer/sprocs/insertIfNotExists";

    RequestOptions requestOptions = new RequestOptions();
    requestOptions.setPartitionKey(new PartitionKey(rec.getKey1()));

    System.out.println("Inserting a record if not exists...");
    try {
      client.executeStoredProcedure(sprocLink, requestOptions, new Object[] {rec});
    } catch (DocumentClientException e) {
      System.err.println("Insertion failed");
      // throw new RuntimeException("Insertion failed", e);
    }
  }
}
